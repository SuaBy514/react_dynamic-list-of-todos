{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","currentTodo","setCurrentTodo","className","map","todo","id","title","completed","type","onClick","TodoFilter","filterType","query","setFilterType","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","currentUser","handleCloseModal","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTodos","setCurrentUser","useEffect","filteredTodos","useMemo","currentTodos","formatedQuery","trim","toLowerCase","filter","includes","useCallback","undefined","length","userId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3984d731.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[],\n  currentTodo: Todo | undefined,\n  setCurrentTodo: (todo: Todo) => void,\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  currentTodo,\n  setCurrentTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        const { id, title, completed } = todo;\n\n        return (\n          <tr key={id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={`has-text-${completed ? 'success' : 'danger'}`}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setCurrentTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={`far fa-eye${currentTodo?.id === id ? '-slash' : ''}`}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","interface TodoFilterProps {\n  filterType: string,\n  query: string,\n  setFilterType: (type: string) => void,\n  setQuery: (text: string) => void,\n}\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  filterType,\n  query,\n  setFilterType,\n  setQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterType}\n          onChange={(event) => setFilterType(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => (setQuery(event.target.value))}\n      />\n\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface TodoModalProps {\n  currentTodo: Todo,\n  currentUser: User | undefined,\n  handleCloseModal: () => void,\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  currentTodo,\n  currentUser,\n  handleCloseModal,\n}) => {\n  const { id, title, completed } = currentTodo;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={`has-text-${completed ? 'success' : 'danger'}`}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${currentUser.email}`}>\n                {currentUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [currentTodo, setCurrentTodo] = useState<Todo | undefined>();\n  const [currentUser, setCurrentUser] = useState<User | undefined>();\n  const [query, setQuery] = useState('');\n  const [filterType, setFilterType] = useState('all');\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    let currentTodos = todos;\n    const formatedQuery = query.trim().toLowerCase();\n\n    if (filterType !== 'all') {\n      currentTodos = currentTodos.filter((todo) => {\n        const { completed } = todo;\n\n        if ((filterType === 'completed' && completed)\n          || (filterType === 'active' && !completed)) {\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    if (formatedQuery) {\n      currentTodos = currentTodos.filter((todo) => (todo.title.toLowerCase().includes(formatedQuery)));\n    }\n\n    return currentTodos;\n  }, [todos, query, filterType]);\n\n  const handleSelectTodo = (todo: Todo) => {\n    setCurrentTodo(todo);\n    getUser(todo.userId)\n      .then(setCurrentUser);\n  };\n\n  const handleCloseModal = useCallback(() => {\n    setCurrentTodo(undefined);\n    setCurrentUser(undefined);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterType={filterType}\n                query={query}\n                setFilterType={setFilterType}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!filteredTodos.length && (<Loader />)}\n              <TodoList\n                todos={filteredTodos}\n                currentTodo={currentTodo}\n                setCurrentTodo={handleSelectTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal\n          currentTodo={currentTodo}\n          currentUser={currentUser}\n          handleCloseModal={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}